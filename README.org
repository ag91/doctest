#+TITLE: Doctest for Emacs
#+OPTIONS: toc:3 author:t creator:nil num:nil
#+AUTHOR: Chris Rayner
#+EMAIL: dchrisrayner@gmail.com

* Description
  These are like a [[https://docs.python.org/3/library/doctest.html][Python "doctest"]], but for Emacs Lisp and with an Emacs
  twist. A doctest is a test written inside a docstring that looks like:

  #+begin_src elisp
  "Return sum of any number of arguments, which are numbers or markers.
  >> (+ 1 1)
  => 2"
  #+end_src

  There are benefits:
  - It's a clean way to test elisp code without any heavy dependencies
  - It encourages functions that are pure or at least side-effect-free
  - Your unit tests turn into documentation that your users can read!

* Usage
  - Type M-x doctest RET to run doctests on an entire buffer.
  - Type M-x doctest-here RET to run the doctest on the current line.
  - Type M-x customize-group RET doctest RET to see customizables.
* Related
  - [[https://docs.python.org/3/library/doctest.html][Python doctest]], the original
  - [[https://elixir-lang.org/getting-started/mix-otp/docs-tests-and-with.html][Elixir]] supports doctests
  - I copied the use of ~>>~ and ~=>~ to mark input and output from [[https://github.com/tslocke/rubydoctest][Ruby doctest]];
    prefixing output with ~=>~ is useful because [[https://www.emacswiki.org/emacs/CheckDoc][checkdoc]] complains if lines
    start with an opening parentheses, which will happen often in elisp code.
